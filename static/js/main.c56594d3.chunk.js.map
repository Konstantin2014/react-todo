{"version":3,"sources":["components/Tasks/TaskInput/TaskInput.module.css","components/UI/Button/Button.module.css","components/Tasks/Task/Task.js","components/Tasks/TaskList/TaskList.js","components/UI/Button/Button.js","components/Tasks/TaskInput/TaskInput.js","App.js","index.js"],"names":["module","exports","Task","props","className","onClick","onDelete","id","children","TaskList","items","map","task","onDeleteTask","text","Button","type","styles","button","TaskInput","useState","inputText","setinputText","isInputValid","setIsInputValid","onSubmit","event","preventDefault","trim","length","onAddTask","invalid","onChange","target","value","App","tasks","setTasks","content","style","textAlign","taskId","prevTasks","filter","updatedTasks","unshift","Math","random","toString","ReactDOM","render","document","getElementById"],"mappings":"yHACAA,EAAOC,QAAU,CAAC,eAAe,gCAAgC,QAAU,6B,iBCA3ED,EAAOC,QAAU,CAAC,OAAS,yB,kLCkBZC,EAfF,SAACC,GAQZ,OACE,oBAAIC,UAAU,YAAYC,QANN,WAEpBF,EAAMG,SAASH,EAAMI,KAIrB,SACGJ,EAAMK,YCGEC,G,MAZE,SAACN,GAChB,OACE,oBAAIC,UAAU,YAAd,SACGD,EAAMO,MAAMC,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CAAoBL,GAAIK,EAAKL,GAAID,SAAUH,EAAMU,aAAjD,SACGD,EAAKE,MADGF,EAAKL,W,gBC4BTQ,EARA,SAACZ,GACd,OACE,wBAAQa,KAAMb,EAAMa,KAAMZ,UAAWa,IAAOC,OAA5C,SACGf,EAAMK,Y,gBC6CEW,EA5CG,SAAChB,GACjB,MAAkCiB,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAqBA,OACE,uBAAMC,SAZkB,SAACC,GACzBA,EAAMC,iBAE0B,IAA5BN,EAAUO,OAAOC,OAKrB1B,EAAM2B,UAAUT,GAHdG,GAAgB,IAOlB,UAOE,sBACEpB,UAAS,UAAKa,IAAO,gBAAZ,aACNM,GAAgBN,IAAOc,SAF5B,UAKE,yEACA,uBAAOf,KAAK,OAAOgB,SAjCM,SAACN,GAC1BA,EAAMO,OAAOC,MAAMN,OAAOC,OAAS,GAErCL,GAAgB,GAElBF,EAAaI,EAAMO,OAAOC,aA8BxB,cAAC,EAAD,CAAQlB,KAAK,SAAb,uGC1BSmB,G,MAxCH,WACV,MAA0Bf,mBAAS,CACjC,CAAEN,KAAM,yGAA0BP,GAAI,MACtC,CAAEO,KAAM,yEAAmBP,GAAI,MAC/B,CAAEO,KAAM,yGAA0BP,GAAI,QAHxC,mBAAO6B,EAAP,KAAcC,EAAd,KAqBIC,EACF,mBAAGC,MAAO,CAAEC,UAAW,UAAvB,uJAOF,OAJIJ,EAAMP,OAAS,IACjBS,EAAU,cAAC,EAAD,CAAU5B,MAAO0B,EAAOvB,aAZV,SAAC4B,GACzBJ,GAAS,SAACK,GAER,OADqBA,EAAUC,QAAO,SAAC/B,GAAD,OAAUA,EAAKL,KAAOkC,YAc9D,gCACE,yBAASlC,GAAG,YAAZ,SACE,cAAC,EAAD,CAAWuB,UA1BM,SAACT,GACtBgB,GAAS,SAACK,GACR,IAAME,EAAY,YAAOF,GAEzB,OADAE,EAAaC,QAAQ,CAAE/B,KAAMO,EAAWd,GAAIuC,KAAKC,SAASC,aACnDJ,UAwBP,yBAASrC,GAAG,QAAZ,SAAqB+B,SCpC3BW,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c56594d3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-control\":\"TaskInput_form-control__e5iaM\",\"invalid\":\"TaskInput_invalid__1ieUV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__40EZ-\"};","import React from \"react\";\r\n\r\nimport \"./Task.css\";\r\n\r\nconst Task = (props) => {\r\n  // const [deleteText, setDeleteText] = useState('');\r\n\r\n  const deleteHandler = () => {\r\n    // setDeleteText('(Deleted!)');\r\n    props.onDelete(props.id);\r\n  };\r\n\r\n  return (\r\n    <li className=\"task-item\" onClick={deleteHandler}>\r\n      {props.children}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\n\r\nimport Task from \"../Task/Task\";\r\nimport \"./TaskList.css\";\r\n\r\nconst TaskList = (props) => {\r\n  return (\r\n    <ul className=\"task-list\">\r\n      {props.items.map((task) => (\r\n        <Task key={task.id} id={task.id} onDelete={props.onDeleteTask}>\r\n          {task.text}\r\n        </Task>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import styles from \"./Button.module.css\";\r\n// import styled from \"styled-components\";\r\n\r\n// const Button = styled.button`\r\n//   width: 100%;\r\n//   font: inherit;\r\n//   padding: 0.5rem 1.5rem;\r\n//   color: white;\r\n//   background: #00358b;\r\n//   border-radius: 4px;\r\n//   box-shadow: 0 0 4px rgba(50, 50, 50, 0.25);\r\n//   cursor: pointer;\r\n// }\r\n\r\n// @media (min-width: 700px) {\r\n//   width: auto;\r\n// }\r\n\r\n// &:focus {\r\n//   outline: none;\r\n// }\r\n\r\n// &:hover,\r\n// &:active {\r\n//   background: #245fbd;\r\n//   box-shadow: 0 0 8px rgba(50, 50, 50, 0.25);\r\n// }\r\n// `;\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <button type={props.type} className={styles.button}>\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Button from \"../../UI/Button/Button\";\r\n// import styled from \"styled-components\";\r\nimport styles from \"./TaskInput.module.css\";\r\n\r\n// const FormInput = styled.div`\r\n//   margin: 0.5rem 0;\r\n\r\n//   & label {\r\n//     font-weight: bold;\r\n//     display: block;\r\n//     margin-bottom: 0.5rem;\r\n//     color: ${(props) => (props.invalid ? \"red\" : \"black\")};\r\n//   }\r\n\r\n//   & input {\r\n//     display: block;\r\n//     width: 100%;\r\n//     border: 1px solid ${(props) => (props.invalid ? \"red\" : \"#ccc\")};\r\n//     background: ${(props) => (props.invalid ? \"#f39d9d\" : \"transparent\")};\r\n//     font: inherit;\r\n//     line-height: 1.5rem;\r\n//     padding: 0 0.25rem;\r\n//   }\r\n\r\n//   & input:focus {\r\n//     outline: none;\r\n//     background: #c8e1e4;\r\n//     border-color: #00358b;\r\n//   }\r\n// `;\r\n\r\nconst TaskInput = (props) => {\r\n  const [inputText, setinputText] = useState(\"\");\r\n  const [isInputValid, setIsInputValid] = useState(true);\r\n\r\n  const taskInputChangeHandler = (event) => {\r\n    if (event.target.value.trim().length > 0) {\r\n      // установка дефолтных стилей по умолчанию\r\n      setIsInputValid(true);\r\n    }\r\n    setinputText(event.target.value);\r\n  };\r\n\r\n  const formSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (inputText.trim().length === 0) {\r\n      // проверяю корректность ввода\r\n      setIsInputValid(false);\r\n      return;\r\n    }\r\n    props.onAddTask(inputText);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={formSubmitHandler}>\r\n      {/* <FormInput className={!isInputValid && \"invalid\"}> */}\r\n      {/* <FormInput invalid={!isInputValid}>\r\n        <label>Задачи</label>\r\n        <input type=\"text\" onChange={taskInputChangeHandler} />\r\n      </FormInput>\r\n      <Button type=\"submit\">Добавить Задачу</Button> */}\r\n      <div\r\n        className={`${styles[\"form-control\"]} ${\r\n          !isInputValid && styles.invalid\r\n        }`}\r\n      >\r\n        <label>Задачи</label>\r\n        <input type=\"text\" onChange={taskInputChangeHandler} />\r\n      </div>\r\n      <Button type=\"submit\">Добавить Задачу</Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskInput;\r\n","import React, { useState } from \"react\";\r\n\r\nimport TaskList from \"./components/Tasks/TaskList/TaskList\";\r\nimport TaskInput from \"./components/Tasks/TaskInput/TaskInput\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  const [tasks, setTasks] = useState([\r\n    { text: \"Создание курса - 1 час\", id: \"t1\" },\r\n    { text: \"Разминка 15 мин\", id: \"t2\" },\r\n    { text: \"Создание курса - 1 час\", id: \"t3\" },\r\n  ]);\r\n\r\n  const addTaskHandler = (inputText) => {\r\n    setTasks((prevTasks) => {\r\n      const updatedTasks = [...prevTasks];\r\n      updatedTasks.unshift({ text: inputText, id: Math.random().toString() });\r\n      return updatedTasks;\r\n    });\r\n  };\r\n\r\n  const deleteTaskHandler = (taskId) => {\r\n    setTasks((prevTasks) => {\r\n      const updatedTasks = prevTasks.filter((task) => task.id !== taskId);\r\n      return updatedTasks;\r\n    });\r\n  };\r\n\r\n  let content = (\r\n    <p style={{ textAlign: \"center\" }}>Задач не найдено! Добавить?</p>\r\n  );\r\n\r\n  if (tasks.length > 0) {\r\n    content = <TaskList items={tasks} onDeleteTask={deleteTaskHandler} />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <section id=\"task-form\">\r\n        <TaskInput onAddTask={addTaskHandler} />\r\n      </section>\r\n      <section id=\"tasks\">{content}</section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from \"react-dom\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}